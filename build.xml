<project name="grails-build" default="dist">

    <taskdef name="svn" classname="org.tigris.subversion.svnant.SvnTask" >
        <classpath>
            <fileset dir="lib" includes="*.jar" />
        </classpath>
    </taskdef>

    <target name="grails-check">
        <condition property="has.grails">
            <available file="checkout/grails" />
        </condition>
    </target>

    <target name="grails-update" if="has.grails" depends="grails-check">
        <echo>Updating Grails</echo>
        <svn>
            <update dir="checkout/grails" />
        </svn>
    </target>

    <target name="grails-checkout" unless="has.grails" depends="grails-update">
        <echo>Checking out Grails</echo>
        <mkdir dir="checkout/grails" />
        <svn>
            <checkout url="http://svn.codehaus.org/grails/tags/GRAILS_RELEASE_1_0/" destPath="checkout/grails" />
        </svn>
        <property name="has.grails" value="true"/>
    </target>

    <target name="grails-javadoc" depends="grails-checkout" if="has.grails"
            description="Generate most current javadoc for Grails">
        <ant dir="checkout/grails" target="javadoc" />

        <mkdir dir="output" />
        <copy todir="output" failonerror="false">
            <fileset dir="checkout/grails/doc" />
        </copy>
    </target>

    <property environment="env" />



    <target name="clean" description="Delete output">
        <delete dir="output" />
    </target>

    <target name="distclean" depends="clean"
            description="Delete everything generated and retrieved">
        <delete dir="bin" />
        <delete dir="checkout" />
        <delete dir="dist" />
    </target>

    <target name="docs" depends="grails-check" if="has.grails"
            description="Generate the Grails Guide and Reference docs">
        <taskdef name="groovyc"  classname="org.codehaus.groovy.ant.Groovyc">
            <classpath>
                <fileset dir="checkout/grails/lib" includes="*.jar"  />
                <fileset dir="lib" />
                <pathelement location="bin" />
            </classpath>
        </taskdef>


        <mkdir dir="bin" />
        <copy todir="bin" file="resources/log4j.properties"/>
		<native2ascii encoding="utf-8" src="resources/ko_KR.UTF-8" dest="resources"/>
        <groovyc srcdir="src/groovy" destdir="bin">
            <classpath>
                <fileset dir="checkout/grails/lib" includes="*.jar"  />
                <fileset dir="lib" />
                <pathelement location="bin" />
            </classpath>
        </groovyc>

        <mkdir dir="output" />
        <java classname="groovy.ui.GroovyMain" failonerror="true" fork="true">
            <arg value="Generate" />
            <classpath>
                <fileset dir="checkout/grails/lib" includes="*.jar"  />
                <fileset dir="lib" />
                <pathelement location="bin" />
            </classpath>
			<sysproperty key="file.encoding" value="UTF-8" />
        </java>
    </target>

    <target name="dist" depends="grails-javadoc,docs"
            description="Build documentation and create a zip for distibution">
        <property file="checkout/grails/build.properties"/>

        <mkdir dir="dist" />
        <delete failonerror="false">
            <fileset dir="dist" includes="*.zip" />
        </delete>
        <zip destfile="dist/grails-docs-${grails.version}.zip" basedir="output"/>
    </target>


</project>
