필터를 만드는 방법은 관례에 따라 grails-app/conf 디렉토리에 “Filters”로 끝나는 클래스를 만들면 된다. 이 클래스 안에 filters라고 불리는 코드 블럭을 만들고 이 블럭에 필터의 내용을 정의한다:

{code:java}
class ExampleFilters {
   def filters = {
        // 여기에 필터를 정의한다
   }
}
{code}

filters 블럭안의 필터들에는 이름과 스콥을 지정할 수 있다. 이름은 메소드 이름이고 스콥는 네임드 파라미터를 사용하여 정의할 수 있다. 예를 들어 모든 컨트롤러와 액션에 적용되는 필터를 정의하고 싶다면 다음과 같이 와일드카드를 사용한다:

{code:java}
sampleFilter(controller:'*', action:'*') {
  // interceptor definitions
}
{code}

가능한 이 필터의 스콥은 다음과 같다:

* 생략가능한 와일드카드를 사용한 컨트롤러나 액션 이름
* Ant의 매칭 문법으로 표현한 URI

필터의 예제들:

* 모든 컨트롤러와 액션에 적용되는 필터
{code:java}
all(controller:'*', action:'*') {

}
{code}
* BookController에만 적용되는 필터
{code:java}
justBook(controller:'book', action:'*') {

}
{code}
* URI에 적용되는 필터
{code:java}
someURIs(uri:'/book/**') {

}
{code}
* 모든 URI에 적용되는 필터
{code:java}
allURIs(uri:'/**') {

}
{code}

필터들은 정의한 순서대로 실행된다.
