Grails는 Spring을 기반으로 만들었고 Spring의 Transaction 추상화 기술을 사용하여 트랜젝션 프로그래밍을 지원한다. GORM은 클래스에 [withTransaction|domainClasses] 메소드를 추가하여 사용하기 쉽도록 개선했다. withTransaction 메소드는 첫 번째 인자로 Spring의 [TransactionStatus|api:org.springframework.transaction.TransactionStatus] 객체를 넘겨 받는다.

일반적인 사용법은 다음과 같다:

{code:java}
def transferFunds = {
	Account.withTransaction { status ->
		def source = Account.get(params.from)
		def dest = Account.get(params.to)	

		def amount = params.amount.toInteger()
		if(source.active) {
			source.balance -= amount
			if(dest.active) {
				dest.amount += amount
			}
			else {
				status.setRollbackOnly()
			}
		}

		
	}
	
}
{code}

이 예제에서 dest 계좌가 active가 아니면 트랜젝션이 롤백되고 트랜젝션이 처리되는 중간에 예외가 발생하면 자동으로 롤백된다.

트랜젝션이 통째로 롤백되지 않고 특정 시점으로 트랜젝션이 롤백되도록 “save points”를 사용할 수 있다. 이 것은 Spring의 [SavePointManager|api:org.springframework.transaction.SavepointManager] 인터페이스를 사용하여 구현됐다.


[withTransaction|domainClasses] 메소드의 블럭내에서만 begin/commit/rollback 로직을 수행할 수 있다.
