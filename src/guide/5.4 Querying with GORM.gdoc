GORM은 동적 파인더(dynamic finder)라는 강력한 질의 방법을 제공한다. 이 것은 Hibernate의 객체지향 쿼리 언어인 HQL에 버금같다.

"GPath":http://groovy.codehaus.org/GPath 와 sort, findAll 같은 메소드들로 컬렉션을 관리할 수 있는 Groovy와 GORM의 결합은 강력한 조합을 만들어 낸다.

그러나. 언제나 천리길도 한 걸음부터.

h4. Listing instances(리스트)

단순하게 [list|domainClasses] 메소드를 사용하여 클래스의 모든 인스턴스를 조회할 수 있다:

{code}
def books = Book.list()
{code}

페이지정보(pagination)를 [list|domainClasses] 메소드의 인자로 넘길 수 있다:

{code}
def books = Book.list(offset:10, max:20)
{code}

정렬도 가능하다.

{code}
def books = Book.list(sort:"title", order:"asc")
{code}

sort 인자로 정열할 때 기준이되는 도메인 클래스의 프로퍼티를 명시하고 order 인자에는 오름 정렬일 때 *asc*를, 내림 정렬일 때에는 *desc*를 사용한다

h4. Retrieval by Database Identifier(데이터베이스 식별자로 조회)

[get|domainClasses] 메소드에 데이터베이스 식별자를 인자로 넘겨서 조회할 수 있다.

{code}
def book = Book.get(23)
{code}

식별자들의 집합을 [getAll|domainClasses] 메소드의 인자로 넘겨서 인스턴스의 목록을 조회할 수 있다.

{code}
def books = Book.getAll(23, 93, 81)
{code}
