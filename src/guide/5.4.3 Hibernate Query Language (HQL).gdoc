GORM에서는 HQL도 사용할 수 있다. Hiberate 문서의 [14장 HQL: The Hibernate Query Language|http://www.hibernate.org/hib_docs/reference/en/html/queryhql.html]에서 HQL에대한 모든 것을 참고할 수 있다.

GORM은 find, [findAll|domainClasses] [executeQuery|domainClasses] 등의 HQL을 사용할 수 있는 얼마간의 메소드들을 제공한다.

{code:java}
def results =
      Book.findAll("from Book as b where b.title like 'Lord of the%'")
{code}

h4. Positional and Named Parameters(위치 파라미터와 이름 파라미터)

쿼리에 필요한 값은 하드코딩하려 한다면 위치 파리미터를 사용할 수 있다:

{code:java}
def results =
      Book.findAll("from Book as b where b.title like ?", ["The Shi%"])

{code}

이름 파라미터를 사용하는 것도 가능하다:

{code:java}
def results =
      Book.findAll("from Book as b where b.title like :search or b.author like :search", [search:"The Shi%"])
{code}

h4. Multiline Queries(여러 줄로 질의하기)

쿼리를 여러줄에 걸쳐서 만들어야 한다면 라인연결문자를 사용하라:

!multilinehql.png!

{note}
여러 줄 문자열을 만들기 위한 Groovy로 표현법은 HQL 쿼리에 사용할 수 없다.
{note}

h4. Pagination and Sorting(페이지 매김과 정렬)

HQL에서도 패이지를 매길 수 있고 정열할 수 있다. 간단하게 메소드 끝에 맵 형식으로 페이지 매김과 정열 옵션을 기술한다.

{code:java}
def results =
      Book.findAll("from Book as b where b.title like 'Lord of the%'", 
                   [max:10, offset:20, sort:"title", order:"asc"])
{code}