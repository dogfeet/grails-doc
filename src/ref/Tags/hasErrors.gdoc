h1. hasErrors 

h2. Purpose

Checks whether a bean, request scope, or model reference has any errors and if it does invokes the body of the tag. Typically used in conjunction with either [eachError|tags] or [renderErrors|tags]


h2. Examples

Checks whether there are any errors for any bean throughout the request scope:

{code:xml}
<g:hasErrors>
    <g:eachError><p>${it.defaultMessage}</p></g:eachError>
</g:hasErrors>
{code}

Checks whether there are any errors for the specified bean

{code:xml}
<g:hasErrors bean="${book}">
    <g:eachError><p>${it.defaultMessage}</p></g:eachError>
</g:hasErrors>
{code}

Checks whether there are any errors for the field "title" of the specified "book" bean:

{code:xml}
<g:hasErrors bean="${book}" field="title">
    <div class="errors">
       <g:renderErrors bean="${book}" field="title" as="list" />
    </div>
</g:hasErrors>
{code}

As a method call in GSP only. In this case we check for a field error on a particular field and set a CSS class on the surround div thus allowing us to highlight the error with a red border for example:

{code:xml}
<div class="prop ${hasErrors(bean:user,field:'login', 'errors')}">
    <label for="login"><input type="text" name="login" />
</div>
{code}

h2. Description

Attributes

* @bean@ (optional) - The bean to check for errors
* @model@ (optional) - The name of the model reference to check for errors
* @field@ (optional) - Check if a field of the bean or model reference has errors


h2. Source

{source:tag=ValidationTagLib.hasErrors}
{source}


