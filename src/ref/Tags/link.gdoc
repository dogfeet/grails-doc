h1. link 

h2. Purpose

Creates an html anchor tag with the @href@ set based on the parameters specified.


h2. Examples

Example controller for an application called "shop":

{code:java}
class BookController {
     def list = { [ books: Book.list( params ) ] }
     def show = { [ book : Book.get( params['id'] ) ] }
}
{code}

Example usages for above controller:

{code:xml}
<g:link action="show" id="1">Book 1</g:link>
<g:link action="show" id="${currentBook.id}">${currentBook.name}</g:link>
<g:link controller="book">Book Home</g:link>
<g:link controller="book" action="list">Book List</g:link>
<g:link url="[action:'list',controller:'book']">Book List</g:link>
<g:link action="list" params="[sort:'title',order:'asc',author:currentBook.author]">
     Book List
</g:link>
<g:link controller="book" absolute="true">Book Home</g:link>
<g:link controller="book" base="http://admin.mysite.com">Book Home</g:link>
{code}


Example as a method call in GSP only:

{code:java}
<%= link(action:'list',controller:'book') { 'Book List' }%>
{code}


Results in:

{code:xml}
<a href="/shop/book/list">Book List</a>
{code}



h2. Description

Attributes

* @action@ (optional) - the name of the action to use in the link, if not specified the default action will be linked
* @controller@ (optional) - the name of the controller to use in the link, if not specified the current controller will be linked
* @id@ (optional) - the id to use in the link
* @params@ (optional) - a map containing request parameters
* @url@ (optional) - a map containing the action, controller, id etc.
* @absolute@ (optional) - If set to "true" will prefix the link target address with the value of the grails.serverURL property from Config, or http://localhost:<port> if no value in Config and not running in production.
* @base@ (optional) - Sets the prefix to be added to the link target address, typically an absolute server URL. This overrides the behaviour of the @absolute@ property, if both are specified.


h2. Source

{source:tag=ApplicationTagLib.link}
{source}


