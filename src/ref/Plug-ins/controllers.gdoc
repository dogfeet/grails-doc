h1. controllers 

h2. Purpose

A plug-in that sets up core Grails MVC architecture using the underlying Spring MVC component model

h2. Examples

A controller:

bc.
class BookController {
	def list = {
		[books:Book.list()]
	}
}

A tag library:

bc.
import java.text.*
class FormatTagLib {
	def dateFormat = { attrs ->
		out << new SimpleDateFormat(attrs.format).format(attrs.value)
	}
}

h2. Description

This plug-in deals with setting up Grails to use Spring MVC at its core to deal with web requests. The plug-in sets up the @GrailsDispatcherServlet@ and necessary Spring beans (see below) for controllers, tag libraries and Groovy Server Pages (GSP)

Configured Spring Beans:

* @exceptionHandler@ - An instance of [org.codehaus.groovy.grails.web.errors.GrailsExceptionResolver|api:org.codehaus.groovy.grails.web.errors.GrailsExceptionResolver] for dealing with exceptions
* @multipartResolver@ - An instance of [org.springframework.web.multipart.commons.CommonsMultipartResolver|api:org.springframework.web.multipart.commons.CommonsMultipartResolver] used for dealing with file uploads using Apache Commons File Upload
* @simpleGrailsController@ - An instance of [org.codehaus.groovy.grails.web.servlet.mvc.SimpleGrailsController|api:org.codehaus.groovy.grails.web.servlet.mvc.SimpleGrailsController], which is an instance of the Spring MVC Controller interface and deals with delegating onto actual Grails controller classes
* @groovyPageResourceLoader@ - Configured in @development@ mode only or when the @grails.gsp.view.dir@ is set. This is a Spring ResourceLoader that knows how to load GSP views from the an arbitrary location
* @groovyPagesTemplateEngine@ - An instance of [org.codehaus.groovy.grails.web.pages.GroovyPagesTemplateEngine|api:org.codehaus.groovy.grails.web.pages.GroovyPagesTemplateEngine], this class deals with rendering of GSP views
* @jspViewResolver@ - An instance of [org.codehaus.groovy.grails.web.servlet.view.GrailsViewResolver|api:org.codehaus.groovy.grails.web.servlet.view.GrailsViewResolver] that knows how to resolve GSP views and is environment aware

The plug-in will also configure each Grails controller class as a prototyped Spring bean and each Grails tag library as a singleton Spring bean



