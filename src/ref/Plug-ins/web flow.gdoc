h1. webflow 

h2. Purpose

The @webflow@ plug-in sets up Grails' support for "Spring Webflow":http://opensource.atlassian.com/confluence/spring/display/WEBFLOW.

h2. Examples

An example web flow:

{code:java}
class BookController {
   ...
   def shoppingCartFlow = {
       showCart {
           on("checkout").to "enterPersonalDetails"           
           on("continueShopping").to "displayCatalogue"
       }
       ...
       displayCatalogue {
            redirect(controller:"catalogue", action:"show")
       }
       displayInvoice()
   }
}
{code}

h2. Description

Refer to the section on [Web Flow|guide:webflow] in the Grails user guide which details how Grails' web flow support works.

Configured Spring Beans:

* @flowRegistry@ - An instance of the @org.codehaus.groovy.grails.webflow.engine.builder.ControllerFlowRegistry@ class that stores persisted flows.
* @flowScopeRegistrar@ - An instance of the Spring Web Flow @org.springframework.webflow.config.scope.ScopeRegistrar@ class which registers the flow scopes with the @ApplicationContext@ so that services can be scoped using flow scopes such as @flow@, @conversation@ and @flash@.
* @hibernateConversationListener@ - An instance of the Web Flow @org.springframework.webflow.support.persistence.HibernateSessionPerConversationListener@ class that manages the Hibernate session for the scope of a flow, allowing atomic use of flows.
* @executionListenerLoader@ - A Web Flow @org.springframework.webflow.execution.factory.StaticFlowExecutionListenerLoader@ that uses the @hibernateConversationListener@ bean with flow execution events to manage the Hibernate session.
* @flowExecutor@ - An instance of the [org.codehaus.groovy.grails.webflow.config.GrailsAwareFlowExecutorFactoryBean|api:org.codehaus.groovy.grails.webflow.config.GrailsAwareFlowExecutorFactoryBean] that knows how to execute Grails flows based on flow execution keys.



