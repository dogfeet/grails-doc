h1. lock

h2. Purpose

The @lock@ method obtains a pessimistic lock using an SQL @select ... for update@.

h2. Examples

{code:java}
def book = Book.get(1)
book.lock()
{code}

h2. Description

The @lock@ method will obtain a pessimistic lock on an instance, essentially locking a row in the database with @select ... for update@. The @lock@ method is equivalent to using Hibernate's [LockMode.UPGRADE|api:org.hibernate.LockMode#UPGRADE] in combination with the [lock|api:org.hibernate.Session#lock(java.lang.Object, org.hibernate.LockMode)] method.

The lock will automatically be released when the transaction is committed. In Grails this is typically after an action has finished executing.

Refer to the section on [Optimistic and Pessimistic locking|guide:locking] in the user guide for info.

